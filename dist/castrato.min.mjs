let index=0,subs={},emits={},noop=function(){};function on(fromId,event,handler,once){let i,item,subscription=[fromId,handler,handler.length>1];(subs[event]||(subs[event]=[])).push(subscription);if(emits[event]){i=0;subscription=[subscription];while(item=emits[event][i++]){emit(0,0,item[0],item[1],subscription);if(once){break}}}}function off(fromId,event,handler){let sub,i=0,toSubs=subs[event];if(toSubs){while(sub=toSubs[i++]){if(sub[0]===fromId&&(!handler||handler===sub[1])){toSubs.splice(--i,1)}}}}function emit(persistent,event,data,callback,explicitSubs){let sub,toSubs=explicitSubs||subs[event]||[],total=toSubs.length,left,loop,answers=[],done;if(subs["*"]){toSubs=toSubs.concat(subs["*"])}loop=left=toSubs.length;if(loop){done=!callback?noop:function(data){if(data){answers.push(data)}if(!--left){callback(answers,total);callback=0}};while(sub=toSubs[--loop]){sub[1](data,sub[2]?done:left--,event)}}if(!left&&callback){callback(answers,total)}if(persistent){(emits[event]||(emits[event]=[])).push([data,callback])}}function Castrato(){this.nodeId=index++;return this}Castrato.prototype.emit=function(persistent,event,data,handler){if(persistent!==true&&persistent!==false){handler=data;data=event;event=persistent;persistent=false}emit(persistent,event,data,handler);return this};Castrato.prototype.on=function(event,handler){on(this.nodeId,event,handler);return this};Castrato.prototype.once=function(event,handler){on(this.nodeId,event,function wrapper(data,done){off(this.nodeId,event,wrapper);handler(data,handler.length>1?done:done())},true);return this};Castrato.prototype.off=function(event,handler){off(this.nodeId,event,handler);return this};Castrato.prototype.destroy=function(){this.nodeId=0;index=0;subs={};emits={};return this};let castrato=new Castrato;export{castrato,castrato as default};